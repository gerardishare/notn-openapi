openapi: 3.0.3
info:
  title: NoTN (Network of Trusted Networks) Webhook API
  description: |
    This API specification defines the webhook subscription endpoints that parties in the NoTN (Network of Trusted Networks) 
    must implement based on their role. The specification follows standard webhook implementation patterns including 
    callback URL registration and OAuth 2.0 bearer token authentication.
    
    ## Roles and Responsibilities
    
    ### Shipper Role
    - Must provide an endpoint to subscribe to new-shipment events
    - Supports optional context filtering (e.g., "PDC" for Pharma Data Corridor)
    
    ### Data Provider Role
    - Must provide an endpoint to subscribe to shipment-event events
    - Supports optional type filtering for specific event types
    
    ## Authentication
    All endpoints require OAuth 2.0 bearer token authentication. The access token must be obtained from the `/token` endpoint (following iSHARE standard).
    
    ## Webhook Implementation
    This specification follows the most widely used webhook implementation strategy:
    - Registration of callback URLs
    - Secure authentication via bearer tokens
    - Event filtering capabilities
    - Standard HTTP status codes and error handling
    
    ## Webhook Payloads
    When webhooks are triggered, the following payloads are sent to the subscriber's callback URL:
    
    ### New Shipment Webhook Payload
    - `id`: Unique identifier for the new shipment
    - `context`: Context of the shipment (e.g., "PDC" for Pharma Data Corridor)
    - `resource_url`: URL to retrieve detailed shipment information
    
    ### Shipment Event Webhook Payload
    - `id`: Unique identifier for the shipment event
    - `type`: Type of the shipment event
    - `shipment_uuid`: UUID of the shipment this event relates to
    
    ## Detail Retrieval
    After receiving a webhook, subscribers can call additional endpoints to retrieve detailed information:
    - `/shipments/{id}`: Get shipment details including the shipment UUID
    - `/shipment-events/{eventId}`: Get event details with extensible event data templates
    
    ## Event Data Templates
    The system supports extensible event data templates. Currently implemented templates include:
    - `shipment_created`: Contains origin, destination, estimated delivery, and priority information
    - `shipment_delivered`: Contains delivery details, signature, location, and notes
    Additional templates can be added to support new event types and data structures.
  version: 1.0.0
  contact:
    name: NoTN Support
    email: support@notn.org
    url: https://notn.org
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.notn.org/v1
    description: Production server
  - url: https://staging-api.notn.org/v1
    description: Staging server
  - url: http://localhost:8000/v1
    description: Local development server

security:
  - BearerAuth: []

paths:
  /webhooks/shipments:
    post:
      tags:
        - Shipper
      summary: Subscribe to new shipment events
      description: |
        Subscribe to new shipment events. This endpoint is required for parties with the Shipper role.
        The subscription can optionally filter shipments by context (e.g., "PDC" for Pharma Data Corridor).
        
        When a new shipment is created that matches the subscription criteria, the webhook will be triggered
        by sending a POST request to the registered callback URL.
      operationId: subscribeToNewShipments
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewShipmentSubscriptionRequest'
      responses:
        '201':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing bearer token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /webhooks/shipment-events:
    post:
      tags:
        - Data Provider
      summary: Subscribe to shipment event updates
      description: |
        Subscribe to shipment event updates. This endpoint is required for parties with the Data Provider role.
        The subscription can optionally filter events by type to receive only specific event types.
        
        When a shipment event occurs that matches the subscription criteria, the webhook will be triggered
        by sending a POST request to the registered callback URL.
      operationId: subscribeToShipmentEvents
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentEventSubscriptionRequest'
      responses:
        '201':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing bearer token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /webhooks/subscriptions/{subscriptionId}:
    get:
      tags:
        - Shipper
        - Data Provider
      summary: Get subscription details
      description: Retrieve details of a specific webhook subscription
      operationId: getSubscription
      security:
        - BearerAuth: []
      parameters:
        - name: subscriptionId
          in: path
          required: true
          description: Unique identifier of the subscription
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Subscription details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        '401':
          description: Unauthorized - Invalid or missing bearer token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Subscription not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Shipper
        - Data Provider
      summary: Delete subscription
      description: Delete a webhook subscription
      operationId: deleteSubscription
      security:
        - BearerAuth: []
      parameters:
        - name: subscriptionId
          in: path
          required: true
          description: Unique identifier of the subscription
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '204':
          description: Subscription deleted successfully
        '401':
          description: Unauthorized - Invalid or missing bearer token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Subscription not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /shipments/{id}:
    get:
      tags:
        - Shipper
      summary: Get shipment details
      description: |
        Retrieve shipment details by ID. This endpoint is called by webhook subscribers after receiving
        a new shipment notification to get the shipment UUID and additional details.
      operationId: getShipmentDetails
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Shipment ID received in the webhook payload
          schema:
            type: string
            example: "ship_12345"
      responses:
        '200':
          description: Shipment details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentDetailsResponse'
        '401':
          description: Unauthorized - Invalid or missing bearer token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Shipment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /shipment-events/{eventId}:
    get:
      tags:
        - Data Provider
      summary: Get shipment event details
      description: |
        Retrieve shipment event details by event ID. This endpoint is called by webhook subscribers after receiving
        a shipment event notification to get detailed information about the event.
      operationId: getShipmentEventDetails
      security:
        - BearerAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          description: Shipment event ID received in the webhook payload
          schema:
            type: string
            example: "evt_67890"
      responses:
        '200':
          description: Shipment event details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentEventDetailsResponse'
        '401':
          description: Unauthorized - Invalid or missing bearer token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Shipment event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        OAuth 2.0 authorization based on bearer token. MUST contain "Bearer " + access token value. 
        The access token must be obtained at the /token endpoint.

  schemas:
    NewShipmentSubscriptionRequest:
      type: object
      required:
        - callback_url
      properties:
        callback_url:
          type: string
          format: uri
          description: |
            The URL where webhook notifications will be sent. Must be HTTPS for production use.
            The server will send POST requests to this URL when new shipments match the subscription criteria.
          example: "https://example.com/webhooks/new-shipments"
        context:
          type: string
          description: |
            Optional context filter to subscribe only to shipments in a specific context.
            Examples include "PDC" (Pharma Data Corridor), "FMCG", "Electronics", etc.
            If not provided, all shipments will be included.
          example: "PDC"
        metadata:
          type: object
          additionalProperties: true
          description: Additional metadata for the subscription, provided by the subscriber
          example:
            description: "Subscription for PDC shipments"
            contact_email: "webhooks@example.com"

    ShipmentEventSubscriptionRequest:
      type: object
      required:
        - callback_url
        - events
      properties:
        shipment_uuid:
          type: string
          format: uuid
          description: |
            UUID of the shipment for which a subscription to events is required.
        callback_url:
          type: string
          format: uri
          description: |
            The URL where webhook notifications will be sent. Must be HTTPS for production use.
            The server will send POST requests to this URL when shipment events match the subscription criteria.
          example: "https://example.com/webhooks/shipment-events"
        type:
          type: array
          items:
            type: string
          description: |
            Optional filter to subscribe only to events of a specific type.
            If not provided, all event types will be included.
          example: ["shipment_created", "shipment_delivered"]
        metadata:
          type: object
          additionalProperties: true
          description: Additional metadata for the subscription, provided by the subscriber
          example:
            description: "Subscription for shipment creation events"
            contact_email: "webhooks@example.com"

    SubscriptionResponse:
      type: object
      required:
        - subscription_id
        - callback_url
        - status
        - created_at
      properties:
        subscription_id:
          type: string
          format: uuid
          description: Unique identifier for the subscription
          example: "123e4567-e89b-12d3-a456-426614174000"
        callback_url:
          type: string
          format: uri
          description: The registered callback URL
          example: "https://example.com/webhooks/new-shipments"
        context:
          type: string
          description: Context filter if applicable
          example: "PDC"
        shipment_uuid:
          type: string
          format: uuid
          description: UUID of the shipment for which the subscription has been activated
        type:
          type: array
          items:
            type: string
          description: Event type filter if applicable
          example: ["shipment_created", "shipment_delivered"]
        status:
          type: string
          enum: [active, inactive, suspended]
          description: Current status of the subscription
          example: "active"
        created_at:
          type: string
          format: date-time
          description: When the subscription was created
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: When the subscription was last updated
          example: "2024-01-15T10:30:00Z"
        metadata:
          type: object
          additionalProperties: true
          description: Additional metadata for the subscription

    # Webhook Payload Schemas
    NewShipmentWebhookPayload:
      type: object
      required:
        - id
        - context
        - resource_url
      properties:
        id:
          type: string
          description: Unique identifier for the new shipment
          example: "ship_12345"
        context:
          type: string
          description: Context of the shipment (e.g., "PDC" for Pharma Data Corridor)
          example: "PDC"
        resource_url:
          type: string
          format: uri
          description: URL to retrieve detailed shipment information
          example: "https://api.notn.org/v1/shipments/ship_12345"

    ShipmentEventWebhookPayload:
      type: object
      required:
        - id
        - type
        - shipment_uuid
      properties:
        id:
          type: string
          description: Unique identifier for the shipment event
          example: "evt_67890"
        type:
          type: string
          description: Type of the shipment event
          example: "shipment_created"
        shipment_uuid:
          type: string
          format: uuid
          description: UUID of the shipment this event relates to
          example: "123e4567-e89b-12d3-a456-426614174000"
        resource_url:
          type: string
          format: uri
          description: URL to retrieve detailed shipment-event information
          example: "https://api.notn.org/v1/shipment-events/ship_12345"

    # Response Schemas for Detail Endpoints
    ShipmentDetailsResponse:
      type: object
      required:
        - shipment_uuid
        - id
        - context
        - status
      properties:
        shipment_uuid:
          type: string
          format: uuid
          description: Unique UUID identifier for the shipment
          example: "123e4567-e89b-12d3-a456-426614174000"
        id:
          type: string
          description: Human-readable shipment ID
          example: "ship_12345"
        context:
          type: string
          description: Context of the shipment
          example: "PDC"
        status:
          type: string
          enum: [created, in_transit, delivered, cancelled]
          description: Current status of the shipment
          example: "created"
        created_at:
          type: string
          format: date-time
          description: When the shipment was created
          example: "2024-01-15T10:30:00Z"

    ShipmentEventDetailsResponse:
      type: object
      required:
        - event_id
        - event_type
        - shipment_uuid
        - event_data
        - occurred_at
      properties:
        event_id:
          type: string
          description: Unique identifier for the shipment event
          example: "evt_67890"
        event_type:
          type: string
          description: Type of the shipment event
          example: "shipment_created"
        shipment_uuid:
          type: string
          format: uuid
          description: UUID of the shipment this event relates to
          example: "123e4567-e89b-12d3-a456-426614174000"
        event_data:
          oneOf:
            - $ref: '#/components/schemas/ShipmentCreatedEventData'
            - $ref: '#/components/schemas/ShipmentDeliveredEventData'
            # Additional event data templates can be added here
        occurred_at:
          type: string
          format: date-time
          description: When the event occurred
          example: "2024-01-15T10:30:00Z"

    # Event Data Templates
    ShipmentCreatedEventData:
      type: object
      required:
        - template_version
        - shipment_details
      properties:
        template_version:
          type: string
          description: Version of the event data template
          example: "1.0"
        shipment_details:
          type: object
          properties:
            origin:
              type: string
              description: Origin location of the shipment
              example: "Warehouse A, Amsterdam"
            destination:
              type: string
              description: Destination location of the shipment
              example: "Distribution Center B, Berlin"
            estimated_delivery:
              type: string
              format: date-time
              description: Estimated delivery date and time
              example: "2024-01-20T14:00:00Z"
            priority:
              type: string
              enum: [low, normal, high, urgent]
              description: Priority level of the shipment
              example: "high"

    ShipmentDeliveredEventData:
      type: object
      required:
        - template_version
        - delivery_details
      properties:
        template_version:
          type: string
          description: Version of the event data template
          example: "1.0"
        delivery_details:
          type: object
          properties:
            delivered_at:
              type: string
              format: date-time
              description: Actual delivery date and time
              example: "2024-01-18T11:30:00Z"
            delivered_by:
              type: string
              description: Name or identifier of the person who delivered
              example: "John Smith"
            signature:
              type: string
              description: Digital signature or proof of delivery
              example: "JS_20240118_1130"
            location:
              type: string
              description: Specific delivery location
              example: "Loading Dock 3, Distribution Center B"
            notes:
              type: string
              description: Additional delivery notes
              example: "Package was left with security desk"

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
          example: "invalid_request"
        message:
          type: string
          description: Human-readable error message
          example: "The request is missing required parameters"
        details:
          type: object
          additionalProperties: true
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: When the error occurred
          example: "2024-01-15T10:30:00Z"

    ValidationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          required:
            - validation_errors
          properties:
            validation_errors:
              type: array
              items:
                type: object
                required:
                  - field
                  - message
                properties:
                  field:
                    type: string
                    description: The field that failed validation
                    example: "callback_url"
                  message:
                    type: string
                    description: Validation error message
                    example: "Must be a valid HTTPS URL"
                  value:
                    type: string
                    description: The invalid value that was provided
                    example: "http://example.com/webhook"

tags:
  - name: Shipper
    description: Endpoints for parties with Shipper role
  - name: Data Provider
    description: Endpoints for parties with Data Provider role
